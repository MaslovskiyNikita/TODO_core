services:
  web:
    build:
      context: .
      dockerfile: Dockerfile  
    command: ["./entrypoint.sh"]
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    env_file:
      - .env
    environment:
      - PYTHONPATH=/app
    depends_on:
      db:
        condition: service_healthy

  db:
    image: postgres:16
    env_file:
      - .env
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $POSTGRES_DB -U $POSTGRES_USER"]
      interval: 5s
      timeout: 10s
      retries: 5

  redis:
    image: redis:latest
    env_file:
      - .env

  celery:
    build:
      context: .
      dockerfile: Dockerfile
    command: poetry run celery -A core worker --loglevel=info -E
    working_dir: /app/application
    env_file:
      - .env
    environment:
      - PYTHONPATH=/app/application      
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - .:/app

  celery-beat:
    build:
      context: .
      dockerfile: Dockerfile
    command: poetry run celery -A core beat --loglevel=info
    working_dir: /app/application
    env_file:
      - .env
    environment:
      - PYTHONPATH=/app/application      
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - .:/app

volumes:
  postgres_data: